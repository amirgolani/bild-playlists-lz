<!DOCTYPE html>
<html lang="en">

<head>
    <title>TOUCH LAGEZENTRUM</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/assets/css/style_11Themen.css">
    <link rel="stylesheet" href="/assets/css/gp_styles_2.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.3/gsap.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
        integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/brands.min.css"
        integrity="sha512-8RxmFOVaKQe/xtg6lbscU9DU0IRhURWEuiI0tXevv+lXbAHfkpamD4VKFQRto9WgfOJDwOZ74c/s9Yesv3VvIQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="/assets/js/ukr-dark-theme.js"></script>
</head>

<body style="background-color: black;">
    <div class="full-hd-container">
        <video style="opacity: 0;" id="video" playsinline autoplay muted loop>
            <source src="/assets/gp/BGUKR.webm" type="video/webm">
        </video>
    </div>
    <div class="full-hd-container">
        <div id="mainTitle" class="main-title">
        </div>
        <div id="mainTitle" class="main-title">
        </div>
    </div>
    <div class="full-hd-container">
        <div id="bottom-dark-blur" class="bottom-dark-blur"></div>
        <div id="left-dark-blur" class="left-dark-blur"></div>
    </div>
    <div id="layoutBuildUp" class="full-hd-container"></div>
    <div id="seek" hidden>
        <!-- <div id="timecode" class="timecode">00:00</div> -->
        <input id="seekslider" type="range" min="0" max="1500" value="0" step="1" style="position: absolute;
        bottom: 318px;
        left: 190px;
        width: 400px;
        height: 10px;
        background-color: white;
        border: none;
        appearance: none;
        outline: none;">

    </div>
    <canvas class="full-hd-container" id="paintCanvas" width="1920" height="1080" hidden></canvas>

    <div id="video-icon" class="video-icon"></div>
    <div id="video-title" class="video-title">Lagezentrum</div>
    <div id="video-timestamp" class="video-timestamp">Julian RÃ¶pcke</div>
    <div id="menuPosIcon" class="menu-icon" onclick="handleMenuPos()"></div>
    <div id="move-icon" class="move-icon" onclick="handleScrollPos()"></div>
    <div id="art-icon" class="art-icon" onclick="manageDraws()"></div>
    <div id="play-icon" class="pause-icon" onclick="handlePlays()" hidden></div>

    <script>
        var canvas = document.getElementById('paintCanvas');
        var context = canvas.getContext('2d');
        var painting = false;
        var drawOnScreen = false;
        var isBlinking = false;

        function manageDraws() {
            if (!drawOnScreen) {
                drawOnScreen = !drawOnScreen;
                gsap.to('#art-icon', { opacity: 1, duration: 0.5 });
                console.log("on")
                startPainting()
                canvas.hidden = false;
            } else {
                drawOnScreen = !drawOnScreen;
                gsap.to('#art-icon', { opacity: .5, duration: 0.5 });

                stopPainting();
                clearCanvas();
                canvas.hidden = true;
            }

        }


        function startPainting() {
            canvas.addEventListener('touchstart', function (e) {
                startPosition(e.touches);
            });
            canvas.addEventListener('touchend', endPosition);
            canvas.addEventListener('touchmove', function (e) {
                e.preventDefault();
                draw(e.touches);
            });
        }

        function stopPainting() {
            canvas.removeEventListener('touchstart', function (e) {
                startPosition(e.touches);
            });
            canvas.removeEventListener('touchend', endPosition);
            canvas.removeEventListener('touchmove', function (e) {
                e.preventDefault();
                draw(e.touches);
            });
        }

        function clearCanvas() {
            context.clearRect(0, 0, canvas.width, canvas.height);
        }

        function startPosition(touches) {
            painting = true;
            draw(touches);
        }

        function endPosition() {
            painting = false;
            context.beginPath();
        }

        function draw(touches) {
            if (!painting) return;

            context.lineWidth = 5;
            context.lineCap = 'round';
            context.strokeStyle = '#000';

            for (var i = 0; i < touches.length; i++) {
                context.lineTo(touches[i].clientX - canvas.offsetLeft, touches[i].clientY - canvas.offsetTop);
                context.stroke();
                context.beginPath();
                context.moveTo(touches[i].clientX - canvas.offsetLeft, touches[i].clientY - canvas.offsetTop);
            }
        }
    </script>

    <script>
        var seekslider;
        var playButton = document.getElementById('play-icon');
        var video = document.getElementById('video'), frameTime = 1 / 25;
        seekslider = document.getElementById("seekslider");
        // Add event listeners
        seekslider.addEventListener("change", vidSeek, false);
        video.addEventListener("timeupdate", seektimeupdate, false);
        video.ontimeupdate = function () { timecodeUpdate() };
        var play = true;
        function pauseVideo() {
            video.pause();
            console.log("pause");
        }
        function ctrlPlayVideo() {
            video.play();
            console.log("play");
        }

        function handlePlays() {
            play = !play;
            if (play) {
                video.play();
                playButton.classList.replace('play-icon', 'pause-icon');
            } else {
                video.pause();
                playButton.classList.replace('pause-icon', 'play-icon');

            }
        }

        function framePlus() {
            video.currentTime = Math.min(video.duration, video.currentTime + frameTime);
        }
        function frameMinus() {
            video.currentTime = Math.max(0, video.currentTime - frameTime);
        }

        function vidSeek() {
            // pauseVideo();
            var seekto = video.duration * (seekslider.value / 1500);
            video.currentTime = seekto;
        }
        function seektimeupdate() {
            var nt = video.currentTime * (1500 / video.duration);
            seekslider.value = nt;
        }
        function timecodeUpdate() {
            // Display the current position of the video in a <p> element with id="demo"
            // document.getElementById("timecode").innerHTML = formatSecondsAsTime(video.currentTime);
        }
        function formatSecondsAsTime(secs, format) {
            var hr = Math.floor(secs / 3600);
            var min = Math.floor((secs - (hr * 3600)) / 60);
            var sec = Math.floor(secs - (hr * 3600) - (min * 60));
            if (min < 10) {
                min = "0" + min;
            }
            if (sec < 10) {
                sec = "0" + sec;
            }

            return min + ':' + sec;


        }

    </script>
</body>



</html>