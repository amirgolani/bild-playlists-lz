<!DOCTYPE html>
<html lang="en">

<head>
    <title>TOUCH LAGEZENTRUM</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- <link rel="stylesheet" href="/assets/css/style_11Themen.css"> -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.3/gsap.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
        integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/gp/favicon-play/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/assets/gp/favicon-play/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/assets/gp/favicon-play/favicon-16x16.png">
    <link rel="manifest" href="/assets/gp/favicon-play/site.webmanifest">
    <style>
        body {
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0;
            background-color: rgb(17, 17, 17);
        }

        .playlist {
            width: 720px;
            padding: 20px;
            background: #1A1A1A;
            border-radius: 20px;
            flex-direction: column;
            box-shadow: 0px 50px 130px rgb(12, 12, 12) inset;
            border: 1px solid #1f1f1f;
            justify-content: flex-start;
            align-items: flex-start;
            gap: 10px;
            display: flex;
            opacity: 0;
        }

        .playlist-container {
            width: 100%;
            height: 100%;
            padding-top: 10%;
            padding-bottom: 50px;
            flex-direction: column;
            justify-content: flex-start;
            align-items: center;
            gap: 12px;
            display: inline-flex
        }
    </style>
</head>

<body>
    <div class="playlist-container" id="playlist-container">


    </div>

    <script>
        fetch('/layouts').then(async response => {
            if (response.ok) {
                // Success: Show an alert or perform any other success action
                var playlists = await response.json()
                console.log(playlists)

                var playlistsHTML = '';

                for (i = 0; i < playlists.length; i++) {
                    playlistsHTML +=
                        `<div class="playlist" id="pl_${i}" onclick="goToPage('${playlists[i].layout[0].url}')">
                            <div style="color: white; font-size: 14px; font-family: Gotham; font-weight: 700; line-height: 14px; ">
                                ${convertToLocaleDateTime(playlists[i].ctime)}</div>
                            <div style="color: white; font-size: 36px; font-family: Gotham; font-weight: 800; line-height: 32px; ">
                                ${playlists[i].layout[0].title}</div>
                            <div style="color: white; font-size: 20px; font-family: Gotham; font-weight: 300; line-height: 20px; ">
                                ${playlists[i].layout[0].gp}</div>
                            <div style="color: #424242; font-size: 14px; font-family: Gotham; font-weight: 700; line-height: 14px; ">
                                ${playlists[i].name}</div>
                        </div>`
                }

                document.getElementById('playlist-container').innerHTML = playlistsHTML;

                for (b = 0; b < playlists.length; b++) {
                    gsap.fromTo(`#pl_${b}`,
                        { opacity: 0, scale: .95 },
                        {
                            opacity: 1,
                            scale: 1,
                            duration: 1,
                            delay: b / 5,
                            ease: 'power1.out'
                        })
                }
            }
        })



        function goToPage(url) {
            window.location.assign(url)
        }

        function convertToLocaleDateTime(timeString) {
            // Create a new Date object from the provided time string
            const utcDate = new Date(timeString);

            // Get the local date and time
            const localDate = new Date(utcDate.getTime() + utcDate.getTimezoneOffset() * 60000);

            // Format the local date and time as a string
            const formattedDate = localDate.toLocaleString();

            return formattedDate;
        }

    </script>

</body>

</html>